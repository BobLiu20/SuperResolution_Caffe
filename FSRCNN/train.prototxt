name: "FSRCNN"
layer {
  type: 'Python'
  name: 'data'
  top: 'data'
  top: 'label'
  # include {
  #   phase: TRAIN
  # }
  python_param {
    # the module name -- usually the filename -- that needs to be in $PYTHONPATH
    module: 'fsrcnn_input_datalayer'
    # the layer name -- the class name in the module
    layer: 'ImageInputDataLayer'
    # parameter
    param_str: '{"batch_size":128, "im_shape":(64,64), "la_shape":(178,178)}'
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 56
    kernel_size: 5
    stride: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.0378
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu1"
  type: "PReLU"
  bottom: "conv1"
  top: "conv1"
  prelu_param {
    channel_shared: 1
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 12
    kernel_size: 1
    stride: 1
	group: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.3536
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu2"
  type: "PReLU"
  bottom: "conv2"
  top: "conv2"
  prelu_param {
    channel_shared: 1
  }
}

layer {
  name: "conv22"
  type: "Convolution"
  bottom: "conv2"
  top: "conv22"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 12
    kernel_size: 3
    stride: 1
	group: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.1179
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu22"
  type: "PReLU"
  bottom: "conv22"
  top: "conv22"
  prelu_param {
    channel_shared: 1
  }
}

layer {
  name: "conv23"
  type: "Convolution"
  bottom: "conv22"
  top: "conv23"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 12
    kernel_size: 3
    stride: 1
	group: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.1179
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu23"
  type: "PReLU"
  bottom: "conv23"
  top: "conv23"
  prelu_param {
    channel_shared: 1
  }
}

layer {
  name: "conv24"
  type: "Convolution"
  bottom: "conv23"
  top: "conv24"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 12
    kernel_size: 3
    stride: 1
	group: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.1179
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu24"
  type: "PReLU"
  bottom: "conv24"
  top: "conv24"
  prelu_param {
    channel_shared: 1
  }
}

layer {
  name: "conv25"
  type: "Convolution"
  bottom: "conv24"
  top: "conv25"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 12
    kernel_size: 3
    stride: 1
	group: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.1179
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu25"
  type: "PReLU"
  bottom: "conv25"
  top: "conv25"
  prelu_param {
    channel_shared: 1
  }
}

layer {
  name: "conv26"
  type: "Convolution"
  bottom: "conv25"
  top: "conv26"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 56
    kernel_size: 1
    stride: 1
	group: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.189
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu26"
  type: "PReLU"
  bottom: "conv26"
  top: "conv26"
  prelu_param {
    channel_shared: 1
  }
}

layer {
  name: "conv3"
  type: "Deconvolution"
  bottom: "conv26"
  top: "conv3"
  param {
    lr_mult: 0.1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 1
    kernel_size: 9
    stride: 3
    pad: 4
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "sigmoid1"
  type: "Sigmoid"
  bottom: "conv3"
  top: "conv3"
}

layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "conv3"
  bottom: "label"
  top: "loss"
}
